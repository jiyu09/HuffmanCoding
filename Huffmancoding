# -*- coding: utf-8 -*-
"""W11_확인문제_Huffman_student.ipynb의 사본

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1e0pHyT24HTMcxwt2kX_-L7Rmr8ch3roD

# 다음 표의 캐릭터와 빈도수로 얻어진 값을 호프만 코드로 만드는 파이썬 클래스 HuffmanNode 를 작성하라. 아래 클래스 틀을 활용하라.
"""

class HuffmanNode:
    def __init__(self, frequency, symbol=None, left=None, right=None):
        self.frequency = frequency
        self.symbol = symbol
        self.left = left
        self.right = right

class HuffmanCoding:
    def __init__(self, frequencies): # frequencies -> dict, with char: freq
        # Initialize with a list of Huffman nodes for each character
        self.nodes = [HuffmanNode(freq, symbol) for symbol, freq in frequencies.items()]

    # Helper method to check if a node is a leaf (has no children)
    def is_leaf(self, node):
        return node.left is None and node.right is None

    def get_codes(self) :
      while len(self.nodes) > 1 :
        self.nodes.sort(key = lambda node : node.frequency)
        left_node = self.nodes.pop(0)
        right_node = self.nodes.pop(0)

        merged_node = HuffmanNode(left_node.frequency + right_node.frequency, None, left_node, right_node)
        self.nodes.append(merged_node)

      root = self.nodes[0] if self.nodes else None
      codes = {}
      self._get_codes(root, "", codes)
      return codes

    def _get_codes(self, node, codes, result_codes) :
      if node is None :
        return

      if self.is_leaf(node) :
        result_codes[node.symbol] = codes
        return result_codes

      self._get_codes(node.left, codes + "1", result_codes)
      self._get_codes(node.right, codes + "0", result_codes)

# Example usage
if __name__ == "__main__":
    # Input frequencies as per Table 9.1.2
    frequencies = {
        '!': 2,
        '@': 3,
        '#': 7,
        '$': 8,
        '%': 12
    }

    # Create HuffmanCoding instance and get the codes
    huffman_coding = HuffmanCoding(frequencies)
    codes = huffman_coding.get_codes()

    # Output the resulting Huffman codes
    print("Huffman Codes for the given frequencies:")
    for symbol, code in codes.items():
        print(f"{symbol}: {code}")

